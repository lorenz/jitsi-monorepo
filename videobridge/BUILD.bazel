load("@io_bazel_rules_kotlin//kotlin:kotlin.bzl", "kt_jvm_library")
load("@rules_java//java:defs.bzl", "java_binary")

package(default_visibility = ["//visibility:public"])

kt_jvm_library(
    name = "libvideobridge",
    srcs = glob([
        "src/main/**/*.java",
        "src/main/**/*.kt",
    ]),
    deps = [
        "//ice4j",
        "//media-transform",
        "//rtp",
        "//sctp/sctp",
        "//stats",
        "//utils/jitsi-utils",
        "//xmpp-extensions",
        "@maven//:com_github_spotbugs_spotbugs_annotations",
        "@maven//:com_googlecode_json_simple_json_simple",
        "@maven//:org_apache_commons_commons_lang3",
        "@maven//:org_bouncycastle_bcpkix_jdk15on",
        "@maven//:org_bouncycastle_bcprov_jdk15on",
        "@maven//:org_bouncycastle_bctls_jdk15on",
        "@maven//:org_eclipse_jetty_websocket_websocket_server",
        "@maven//:org_igniterealtime_smack_smack_core",
        "@maven//:org_igniterealtime_smack_smack_extensions",
        "@maven//:org_jetbrains_annotations",
        "@maven//:org_jetbrains_kotlin_kotlin_reflect",
        "@maven//:org_jetbrains_kotlin_kotlin_stdlib",
        "@maven//:org_jxmpp_jxmpp_core",
        "@maven//:org_jxmpp_jxmpp_jid",
        "@maven//:org_osgi_org_osgi_core",
    ],
)

java_binary(
    name = "videobridge",
    main_class = "org.jitsi.videobridge.Main",
    resources = ["//sctp/jniwrapper/native/src/main/resources/lib/linux:libjnisctp"],
    runtime_deps = [":libvideobridge"],
)
